xlab = "TCGA-KIRC", ylab = "ICGC-RECA",
add = "reg.line",  # Add regressin line
title = "Variance-stabilizing transformation with DESeq2",
add.params = list(color = "blue", fill = "lightgray"), # Customize reg. line
conf.int = TRUE) # Add confidence interval
# Add correlation coefficient
p_devst <- sp_devst + stat_cor(method = "pearson", label.x = 3, label.y = 16,                               ,
aes(label = paste(..rr.label.., fancy_scientific(..p.label..), sep = "~`,`~")) )
sp_devst
sp_devst + stat_cor(method = "pearson", label.x = 3, label.y = 16)
fancy_scientific
View(df)
df <- data_long %>%
# for each gene
group_by(genes, dataset) %>%
# get mean and variance
summarise(median = median(cts)) %>%
pivot_wider(names_from = "dataset", values_from = "median")  %>%
data.frame()
sp_devst <- ggscatter(df, x = "TCGA", y = "ICGC",
xlab = "TCGA-KIRC", ylab = "ICGC-RECA",
add = "reg.line",  # Add regressin line
title = "Variance-stabilizing transformation with DESeq2",
add.params = list(color = "blue", fill = "lightgray"), # Customize reg. line
conf.int = TRUE) # Add confidence interval
# Add correlation coefficient
p_devst <- sp_devst + stat_cor(method = "pearson", label.x = 3, label.y = 16,                               ,
aes(label = paste(..rr.label.., fancy_scientific(..p.label..), sep = "~`,`~")) )
df <- df[df$ICGC> 0 || df$TCGA > 0, ]
sp_devst <- ggscatter(df, x = "TCGA", y = "ICGC",
xlab = "TCGA-KIRC", ylab = "ICGC-RECA",
add = "reg.line",  # Add regressin line
title = "Variance-stabilizing transformation with DESeq2",
add.params = list(color = "blue", fill = "lightgray"), # Customize reg. line
conf.int = TRUE) # Add confidence interval
# Add correlation coefficient
p_devst <- sp_devst + stat_cor(method = "pearson", label.x = 3, label.y = 16,                               ,
aes(label = paste(..rr.label.., fancy_scientific(..p.label..), sep = "~`,`~")) )
# Add correlation coefficient
p_devst <- sp_devst +
geom_point() +
stat_cor(method = "pearson", label.x = 3, label.y = 16,                               ,
aes(label = paste(..rr.label.., fancy_scientific(..p.label..), sep = "~`,`~")) )
sp_devst <- ggscatter(df, x = "TCGA", y = "ICGC",
xlab = "TCGA-KIRC", ylab = "ICGC-RECA",
add = "reg.line",  # Add regressin line
title = "Variance-stabilizing transformation with DESeq2",
add.params = list(color = "blue", fill = "lightgray"), # Customize reg. line
conf.int = TRUE) # Add confidence interval
# Add correlation coefficient
p_devst <- sp_devst +
geom_point() +
stat_cor(method = "pearson", label.x = 3, label.y = 16,                               ,
aes(label = paste(..rr.label.., fancy_scientific(..p.label..), sep = "~`,`~")) )
sp_devst <- ggscatter(df, x = "TCGA", y = "ICGC",
xlab = "TCGA-KIRC", ylab = "ICGC-RECA",
add = "reg.line",  # Add regressin line
title = "Variance-stabilizing transformation with DESeq2",
add.params = list(color = "blue", fill = "lightgray"), # Customize reg. line
conf.int = TRUE) + # Add confidence interval
geom_point()
# Add correlation coefficient
p_devst <- sp_devst +
stat_cor(method = "pearson", label.x = 3, label.y = 16,                               ,
aes(label = paste(..rr.label.., fancy_scientific(..p.label..), sep = "~`,`~")) )
sp_devst <- ggscatter(df, aes(x, y), x = "TCGA", y = "ICGC",
xlab = "TCGA-KIRC", ylab = "ICGC-RECA",
add = "reg.line",  # Add regressin line
title = "Variance-stabilizing transformation with DESeq2",
add.params = list(color = "blue", fill = "lightgray"), # Customize reg. line
conf.int = TRUE) + # Add confidence interval
geom_point()
"
sp_devst <- ggscatter(df, aes(x, y), x = "TCGA", y = "ICGC",
xlab = "TCGA-KIRC", ylab = "ICGC-RECA",
add = "reg.line",  # Add regressin line
title = "Variance-stabilizing transformation with DESeq2",
add.params = list(color = "blue", fill = "lightgray"), # Customize reg. line
conf.int = TRUE) # Add confidence interval
sp_devst <- ggscatter(df, aes(x, y), x = "TCGA", y = "ICGC",
xlab = "TCGA-KIRC", ylab = "ICGC-RECA",
add = "reg.line",  # Add regressin line
title = "Variance-stabilizing transformation with DESeq2",
add.params = list(color = "blue", fill = "lightgray"), # Customize reg. line
conf.int = TRUE) # Add confidence interval
sp_devst <- ggscatter(df, x = "TCGA", y = "ICGC",
xlab = "TCGA-KIRC", ylab = "ICGC-RECA",
add = "reg.line",  # Add regressin line
title = "Variance-stabilizing transformation with DESeq2",
add.params = list(color = "blue", fill = "lightgray"), # Customize reg. line
conf.int = TRUE) # Add confidence interval
# Add correlation coefficient
p_devst <- sp_devst +
stat_cor(method = "pearson", label.x = 3, label.y = 16,                               ,
aes(label = paste(..rr.label.., fancy_scientific(..p.label..), sep = "~`,`~")) )
p_devst <- sp_devst +
stat_cor(method = "pearson", label.x = 3, label.y = 16)
p_devst
# Add correlation coefficient
p_devst <- sp_devst +
stat_cor(method = "pearson", label.x = 3, label.y = 16,
aes(label = paste(..rr.label.., fancy_scientific(..p.label..), sep = "~`,`~")) )
if(!require(tidyverse)){install.packages("tidyverse")}
if(!require(caret)){install.packages("caret")}
if(!require(ggpubr)){install.packages("ggpubr")}
if(!require(BBmisc)){install.packages("BBmisc")}
load("../data/2.data.full.count.rda")
load("../data/1.data.processed.rda")
col_clini <- c("obs.time", "status", "age", "gender", "neoplasm", "metastasis", "ajcc.stage", "dataset")
col_genes <- setdiff(colnames(data), col_clini)
data_long <- full.data %>%
dplyr::select(!c("obs.time", "status", "age", "gender", "neoplasm", "metastasis", "ajcc.stage")) %>%
pivot_longer(-dataset,names_to = "genes", values_to = "cts")
df <- data_long %>%
# for each gene
group_by(genes, dataset) %>%
# get mean and variance
summarise(median = median(cts)) %>%
pivot_wider(names_from = "dataset", values_from = "median")
#df[, c("TCGA", "ICGC")] <- log2(df[, c("TCGA", "ICGC")]+1)
# df %>%
#   # plot one against the other
#   ggplot(aes(TCGA, ICGC)) +
#   geom_point() +
#   geom_abline(colour = "brown")
sp_raw <- ggscatter(df, x = "TCGA", y = "ICGC",
add = "reg.line",  # Add regressin line
xlab = "TCGA-KIRC", ylab = "ICGC-RECA",
title = "Raw counts",
add.params = list(color = "blue", fill = "lightgray"), # Customize reg. line
conf.int = TRUE # Add confidence interval
) +
scale_x_continuous(labels = scales::comma_format(big.mark = ',',
decimal.mark = '.')) +
scale_y_continuous(labels = scales::comma_format(big.mark = ',',
decimal.mark = '.'))
#makes the scientific notation using "AeB" explicitly write out Ax10^B
fancy_scientific <- function(l) {
# turn in to character string in scientific notation
l <- format(l, scientific = TRUE)
# quote the part before the exponent to keep all the digits
l <- gsub("^(.*)e(.*)$", "\\1e\\2", l)
# turn the 'e+' into plotmath format
l <- gsub("e", '~`\U00D7 10`^', l)
# return this as a string
l
}
# Add correlation coefficient
p1 <-sp_raw + stat_cor(method = "spearman",
label.x = 40000,
label.y = 70000,
aes(label = paste(..rr.label.., fancy_scientific(..p.label..), sep = "~`,`~") ) #
)
data_long <- data %>%
dplyr::select(!c("obs.time", "status", "age", "gender", "neoplasm", "metastasis", "ajcc.stage")) %>%
pivot_longer(-dataset,names_to = "genes", values_to = "cts")
df <- data_long %>%
# for each gene
group_by(genes, dataset) %>%
# get mean and variance
summarise(median = median(cts)) %>%
pivot_wider(names_from = "dataset", values_from = "median")
sp_bc <- ggscatter(df, x = "TCGA", y = "ICGC",
xlab = "TCGA-KIRC", ylab = "ICGC-RECA",
add = "reg.line",  # Add regressin line
title = "Box-Cox transformation",
add.params = list(color = "blue", fill = "lightgray"), # Customize reg. line
conf.int = TRUE # Add confidence interval
)
# Add correlation coefficient
p2 <- sp_bc + stat_cor(method = "pearson", label.x = 3, label.y = 12,
aes(label = paste(..rr.label.., fancy_scientific(..p.label..), sep = "~`,`~") ) )
pdf("../plots/fig_supl_scatter.pdf", width = 12, height = 4.5)
cowplot::plot_grid(p1, p2, labels = c("a", "b"), nrow=1)
dev.off()
# DESeq2+vst ===========================================================================
# DESeq2+vst ===========================================================================
library(DESeq2)
vst2 <- function(countdata, condition){
colData <- data.frame(matrix( nrow=nrow(countdata) ))
colData$condition <- as.factor(condition)
rownames(colData) <- rownames(countdata)
countdata <-  DESeq2::DESeqDataSetFromMatrix(countData = as.matrix(t(countdata)),
colData = colData, design = ~ condition)
countdata <- DESeq2::estimateSizeFactors( countdata )
cdsBlind <- DESeq2::estimateDispersions( countdata, fitType="mean")
vstdata <- DESeq2::varianceStabilizingTransformation( cdsBlind , fitType="mean")
return( t(assay(vstdata)))
}
data.vst2 <- vst2(full.data[, col_genes], full.data$dataset)
data.vst <- cbind(full.data[, col_clini], data.vst2)
data.vst <- as.data.frame(data.vst)
data_long <- data.vst %>%
dplyr::select(!c("obs.time", "status", "age", "gender", "neoplasm", "metastasis", "ajcc.stage")) %>%
pivot_longer(-dataset,names_to = "genes", values_to = "cts")
df <- data_long %>%
# for each gene
group_by(genes, dataset) %>%
# get mean and variance
summarise(median = median(cts)) %>%
pivot_wider(names_from = "dataset", values_from = "median")  %>%
data.frame()
#df <- df[df$ICGC> 0 || df$TCGA > 0, ]
sp_devst <- ggscatter(df, x = "TCGA", y = "ICGC",
xlab = "TCGA-KIRC", ylab = "ICGC-RECA",
add = "reg.line",  # Add regressin line
title = "Variance-stabilizing transformation with DESeq2",
add.params = list(color = "blue", fill = "lightgray"), # Customize reg. line
conf.int = TRUE) # Add confidence interval
# Add correlation coefficient
p_devst <- sp_devst +
stat_cor(method = "pearson", label.x = 3, label.y = 16,
aes(label = paste(..rr.label.., fancy_scientific(..p.label..), sep = "~`,`~")) )
# caret+rang ===========================================================================
data.range <- full.data
data.range[, col_genes] <- full.data[, col_genes]+1
set.seed(1)
# calculate the pre-process parameters from the dataset
#preprocessParams <- preProcess(data[data$dataset == "TCGA",col_genes], method=c("BoxCox"), fudge=1)
#cols <- setdiff(col_genes, c("GDF1", "RPL36P4", "RPL23AP1", "AC005363.1"))
preprocessParams <- caret::preProcess(full.data[full.data$dataset == "TCGA", col_genes], rangeBounds = c(0,1), method="range")
# transform the dataset using the parameters
data.range[data.range$dataset == "TCGA",col_genes] <- stats::predict(preprocessParams, full.data[full.data$dataset == "TCGA", col_genes])
data.range[data.range$dataset == "ICGC",col_genes] <- stats::predict(preprocessParams, full.data[full.data$dataset == "ICGC", col_genes])
#data.range[,col_genes] <- predict(preprocessParams, full.data[, col_genes])
data_long <- data.range %>%
dplyr::select(-c("obs.time", "status", "age", "gender", "neoplasm", "metastasis", "ajcc.stage")) %>%
pivot_longer(-dataset,names_to = "genes", values_to = "cts")
df <- data_long %>%
# for each gene
group_by(genes, dataset) %>%
# get mean and variance
summarise(median = median(cts)) %>%
pivot_wider(names_from = "dataset", values_from = "median")
#df <- df[df$ICGC < 1,]
sp_range <- ggscatter(df, x = "TCGA", y = "ICGC",
xlab = "TCGA-KIRC", ylab = "ICGC-RECA",
add = "reg.line",  # Add regressin line
title = "Scaling between zero and one \n(with Caret R package and 'range' method)",
add.params = list(color = "blue", fill = "lightgray"), # Customize reg. line
conf.int = TRUE # Add confidence interval
)
# Add correlation coefficient
p_range <- sp_range +
stat_cor(method = "pearson", label.x = 0.3, label.y = 7,
aes(label = paste(..rr.label.., fancy_scientific(..p.label..), sep = "~`,`~") ) ) +
xlim(0, 1)
p_range
# BBmisc+rang ===========================================================================
data.rscale <- full.data
set.seed(123)
data.rscale[, col_genes] <- normalize(full.data[, col_genes], method="range", range=c(0,1))
data_long <- data.rscale %>%
dplyr::select(-c("obs.time", "status", "age", "gender", "neoplasm", "metastasis", "ajcc.stage")) %>%
pivot_longer(-dataset,names_to = "genes", values_to = "cts")
df <- data_long %>%
# for each gene
group_by(genes, dataset) %>%
# get mean and variance
summarise(median = median(cts)) %>%
pivot_wider(names_from = "dataset", values_from = "median")
#df <- df[df$ICGC < 1,]
sp_rscale <- ggscatter(df, x = "TCGA", y = "ICGC",
xlab = "TCGA-KIRC", ylab = "ICGC-RECA",
add = "reg.line",  # Add regressin line
title = "Scaling between zero and one \n(with BBmisc R package and 'range' method)",
add.params = list(color = "blue", fill = "lightgray"), # Customize reg. line
conf.int = TRUE # Add confidence interval
)
# Add correlation coefficient
p_rscale <- sp_rscale +
stat_cor(method = "pearson", label.x = 0.3, label.y = 1,
aes(label = paste(..rr.label.., fancy_scientific(..p.label..), sep = "~`,`~") ) ) +
xlim(0, 1)
p_rscale
# log2(count+1) ===========================================================================
data.log <- full.data
data.log[, col_genes] <- log2(data.log[, col_genes]+1)
data_long <- data.log %>%
dplyr::select(!c("obs.time", "status", "age", "gender", "neoplasm", "metastasis", "ajcc.stage")) %>%
pivot_longer(-dataset,names_to = "genes", values_to = "cts")
df <- data_long %>%
# for each gene
group_by(genes, dataset) %>%
# get mean and variance
summarise(median = median(cts)) %>%
pivot_wider(names_from = "dataset", values_from = "median")
#df <- df[df$ICGC < 1,]
sp_log <- ggscatter(df, x = "TCGA", y = "ICGC",
xlab = "TCGA-KIRC", ylab = "ICGC-RECA",
add = "reg.line",  # Add regressin line
title = "log2(count+1) normalisation",
add.params = list(color = "blue", fill = "lightgray"), # Customize reg. line
conf.int = TRUE # Add confidence interval
)
# Add correlation coefficient
p_log <- sp_log + stat_cor(method = "pearson",
label.x = 7,
label.y = 16,
aes(label = paste(..rr.label.., fancy_scientific(..p.label..), sep = "~`,`~") ) )
p_log
# # center+scale+nzv ===========================================================================
#
# data.csn <- full.data
# data.csn[, col_genes] <- data.csn[, col_genes]+1
#
# # calculate the pre-process parameters from the dataset
# preprocessParams <- preProcess(full.data[full.data$dataset == "TCGA",col_genes], method=c("center","scale","nzv"))
#
# # transform the dataset using the parameters
# data.csn[data.csn$dataset == "TCGA",col_genes] <- predict(preprocessParams, full.data[full.data$dataset == "TCGA", col_genes])
# data.csn[data.csn$dataset == "ICGC",col_genes] <- predict(preprocessParams, full.data[full.data$dataset == "ICGC", col_genes])
# #data.csn$pp  <- "center+scale+nzv"
#
#
# data_long <- data.csn %>%
#   dplyr::select(!c("obs.time", "status", "age", "gender", "neoplasm", "metastasis", "ajcc.stage")) %>%
#   pivot_longer(-dataset,names_to = "genes", values_to = "cts")
#
# df <- data_long %>%
#   # for each gene
#   group_by(genes, dataset) %>%
#   # get mean and variance
#   summarise(median = median(cts)) %>%
#   pivot_wider(names_from = "dataset", values_from = "median")
#
# #df <- df[df$ICGC < 1,]
# sp_csn <- ggscatter(df, x = "TCGA", y = "ICGC",
#                       xlab = "TCGA-KIRC", ylab = "ICGC-RECA",
#                       add = "reg.line",  # Add regressin line
#                       title = "Median gene expression by center+scale+nzv \n near-zero-variance (caret+range)",
#                       add.params = list(color = "blue", fill = "lightgray"), # Customize reg. line
#                       conf.int = TRUE # Add confidence interval
# )
# # Add correlation coefficient
# p_csn <- sp_csn + stat_cor(method = "pearson", label.x = -0.2, label.y = 40)
# p_csn
pdf("../figs/figA02_normalization.pdf", width = 12, height = 15)
cowplot::plot_grid(p1, p_log,  p_devst, p2, p_range, p_rscale, labels = "auto", nrow=3)
dev.off()
# install https://indrajeetpatil.github.io/ggstatsplot/index.html
# remotes::install_github("IndrajeetPatil/ggstatsplot")
# sudo apt-get install libgmp3-dev
# sudo apt-get install libmpfr-dev
if(!require("ggstatsplot")){remotes::install_github("IndrajeetPatil/ggstatsplot")}
if(!require("tidyverse")){install.packages("tidyverse")}
if(!require("ggfortify")){install.packages("ggfortify")}
if(!require("survival")){install.packages("survival")}
if(!require("cowplot")){install.packages("cowplot")}
if(!require("pals")){install.packages("pals")}
if(!require("colorspace")){install.packages("colorspace")}
if(!require("ggsci")){install.packages("ggsci")}
# Load Data ----
#load(file = "../data/2.gsign_kidney.rda")
load("../data/1.data.processed.rda")
sign <- c("age","ZIC2", "SEMA3G", "SAA1", "OTX1", "LINC01732", "LIMCH1", "IL4", "HHLA2", "GNB3", "FOXJ1", "DPP6", "AR", "AL353637.1")
sign <- intersect(sign, colnames(data))
data <- data[!is.na(data$metastasis), ]
data$gender <-ifelse(data$gender == 1, "Male", "Female")
library(survival)
aa_fit <-aareg(as.formula(paste0("Surv(obs.time, status) ~ " , paste(sign, collapse= " + "))),
data = data)
aa_fit
summary(aa_fit)  # provides a more complete summary of results
#vars <- c("Intercept", "age", "genderMale",  "metastasisM1", "metastasisMX",  "AL353637.1", "AL138830.2", "DPP6", "FOXJ1", "HHLA2", "MICG", "LIMCH1", "VSX1", "AR", "IL4", "CASR", "CRH", "GNB3", "SAA1")
vars <- c("Intercept", "age", "ZIC2", "SEMA3G", "SAA1", "OTX1", "LINC01732", "LIMCH1", "IL4", "HHLA2", "GNB3", "FOXJ1", "DPP6", "AR", "AL353637.1")
variables <- rev(factor(vars, levels=vars))
#-- color decrease of lightness
cols1 <- as.vector(glasbey(15))
cols1 <- readhex(file = textConnection(paste(cols1, collapse = "\n")),
class = "RGB")
#transform to hue/lightness/saturation colorspace
cols1 <- as(cols1, "HLS")
#additive decrease of lightness
cols1@coords[, "L"] <- pmax(0, cols1@coords[, "L"] + 0.05)
cols1 <- as(cols1, "RGB")
cols1 <- hex(cols1)
p1 <- ggcoefstats(
x = aa_fit,
title = "Aalen's additive regression model",
subtitle = "(for censored data)",
only.significant = F,
#point.args = list(color = "green", shape = 9),
package = "pals",
stats.label.args = list(
max.time = 3,
direction = "y",
point.padding = 0.2,
nudge_x = .15,
nudge_y = .5,
segment.curvature = -0.1,
segment.angle = 10,
segment.size  = 0.2,
segment.linetype = 2
# nudge_x = .15,
# box.padding = 0.5,
# nudge_y = 1,
# segment.curvature = -0.1,
# segment.ncp = 3,
# segment.angle = 20
),
palette = "glasbey",
sort = "none",
k = 3
) + ggplot2::theme(text = element_text(size=18),
axis.text = element_text(size=16)
)
#+  ggplot2::scale_y_discrete(labels = vars)
p1[["layers"]][[4]][["data"]][["label"]][[1]] <- "list(~widehat(italic(beta))=='7.21 \U00D7 10'^'-3', ~italic(z)=='2.687', ~italic(p)=='0.014')"
p1[["layers"]][[4]][["data"]][["label"]][[2]] <- "list(~widehat(italic(beta))=='4.307 \U00D7 10'^'-5', ~italic(z)=='417.530', ~italic(p)=='0.012')"
p1[["layers"]][[4]][["data"]][["label"]][[3]] <- "list(~widehat(italic(beta))=='3.991 \U00D7 10'^'-4', ~italic(z)=='32.486', ~italic(p)=='0.054')"
p1[["layers"]][[4]][["data"]][["label"]][[4]] <- "list(~widehat(italic(beta))=='-2.954 \U00D7 10'^'-5', ~italic(z)=='-1.515', ~italic(p)=='0.907')"
p1[["layers"]][[4]][["data"]][["label"]][[5]] <- "list(~widehat(italic(beta))=='1.395 \U00D7 10'^'-4', ~italic(z)=='61.970', ~italic(p)=='0.068')"
p1[["layers"]][[4]][["data"]][["label"]][[6]] <- "list(~widehat(italic(beta))=='5.996 \U00D7 10'^'-4', ~italic(z)=='32.990', ~italic(p)=='0.014')"
p1[["layers"]][[4]][["data"]][["label"]][[7]] <- "list(~widehat(italic(beta))=='4.073 \U00D7 10'^'-4', ~italic(z)=='14.360', ~italic(p)=='0.144')"
p1[["layers"]][[4]][["data"]][["label"]][[8]] <- "list(~widehat(italic(beta))=='-9.320 \U00D7 10'^'-4', ~italic(z)=='-20.702', ~italic(p)=='0.020')"
p1[["layers"]][[4]][["data"]][["label"]][[9]] <- "list(~widehat(italic(beta))=='7.920 \U00D7 10'^'-4', ~italic(z)=='27.023', ~italic(p)=='0.006')"
p1[["layers"]][[4]][["data"]][["label"]][[10]] <- "list(~widehat(italic(beta))=='-4.194 \U00D7 10'^'-4', ~italic(z)=='-60.500', ~italic(p)=='0.008')"
p1[["layers"]][[4]][["data"]][["label"]][[11]] <- "list(~widehat(italic(beta))=='2.863 \U00D7 10'^'-4', ~italic(z)=='20.657', ~italic(p)=='0.140')"
p1[["layers"]][[4]][["data"]][["label"]][[12]] <- "list(~widehat(italic(beta))=='4.436 \U00D7 10'^'-4', ~italic(z)=='64.615', ~italic(p)=='0.002')"
p1[["layers"]][[4]][["data"]][["label"]][[13]] <- "list(~widehat(italic(beta))=='-5.124 \U00D7 10'^'-4', ~italic(z)=='-59.365', ~italic(p)=='0.002')"
p1[["layers"]][[4]][["data"]][["label"]][[14]] <- "list(~widehat(italic(beta))=='1.693 \U00D7 10'^'-4', ~italic(z)=='6.716', ~italic(p)=='0.554')"
p1[["layers"]][[4]][["data"]][["label"]][[15]] <- "list(~widehat(italic(beta))=='-4.680 \U00D7 10'^('-4'), ~italic(z)=='-37.743', ~italic(p)=='0.004')"
p2 <- ggplot2::autoplot(aa_fit) +
theme(legend.position="none",
text = element_text(size=16),
axis.text = element_text(size=10))
p2$layers[[1]]$data$variable <- factor(p2$layers[[1]]$data$variable,
levels= variables)
p2$layers[[2]]$data$variable <- factor(p2$layers[[2]]$data$variable,
levels= variables)
p2$data$variable <- factor(p2$data$variable,
levels= variables)
p2 <- p2 +
scale_fill_manual(values=rev(cols1))
pdf("../figs/fig5_mRMR_aareg.pdf", width = 14, height = 8)
cowplot::plot_grid(p1, p2, labels = "auto", nrow=1, rel_widths = c(0.7,1))
dev.off()
#vars <- c("Intercept", "age", "genderMale",  "metastasisM1", "metastasisMX",  "AL353637.1", "AL138830.2", "DPP6", "FOXJ1", "HHLA2", "MICG", "LIMCH1", "VSX1", "AR", "IL4", "CASR", "CRH", "GNB3", "SAA1")
vars <- c("Intercept", "age", "ZIC2", "SEMA3G", "SAA1", "OTX1", "LINC01732", "LIMCH1", "IL4", "HHLA2", "GNB3", "FOXJ1", "DPP6", "AR", "AL353637.1")
variables <- rev(factor(vars, levels=vars))
#-- color decrease of lightness
cols1 <- as.vector(glasbey(15))
cols1 <- readhex(file = textConnection(paste(cols1, collapse = "\n")),
class = "RGB")
#transform to hue/lightness/saturation colorspace
cols1 <- as(cols1, "HLS")
#additive decrease of lightness
cols1@coords[, "L"] <- pmax(0, cols1@coords[, "L"] + 0.05)
cols1 <- as(cols1, "RGB")
cols1 <- hex(cols1)
p1 <- ggcoefstats(
x = aa_fit,
title = "Aalen's additive regression model",
subtitle = "(for censored data)",
only.significant = F,
#point.args = list(color = "green", shape = 9),
package = "pals",
stats.label.args = list(
max.time = 3,
direction = "y",
point.padding = 0.2,
nudge_x = .15,
nudge_y = .5,
segment.curvature = -0.1,
segment.angle = 10,
segment.size  = 0.2,
segment.linetype = 2
# nudge_x = .15,
# box.padding = 0.5,
# nudge_y = 1,
# segment.curvature = -0.1,
# segment.ncp = 3,
# segment.angle = 20
),
palette = "glasbey",
sort = "none",
k = 3
) + ggplot2::theme(text = element_text(size=18),
axis.text = element_text(size=16)
)
#+  ggplot2::scale_y_discrete(labels = vars)
p1[["layers"]][[4]][["data"]][["label"]][[1]] <- "list(~widehat(italic(beta))=='7.21 \U00D7 10'^'-3', ~italic(z)=='2.687', ~italic(p)=='0.014')"
p1[["layers"]][[4]][["data"]][["label"]][[2]] <- "list(~widehat(italic(beta))=='4.307 \U00D7 10'^'-5', ~italic(z)=='417.530', ~italic(p)=='0.012')"
p1[["layers"]][[4]][["data"]][["label"]][[3]] <- "list(~widehat(italic(beta))=='3.991 \U00D7 10'^'-4', ~italic(z)=='32.486', ~italic(p)=='0.054')"
p1[["layers"]][[4]][["data"]][["label"]][[4]] <- "list(~widehat(italic(beta))=='-2.954 \U00D7 10'^'-5', ~italic(z)=='-1.515', ~italic(p)=='0.907')"
p1[["layers"]][[4]][["data"]][["label"]][[5]] <- "list(~widehat(italic(beta))=='1.395 \U00D7 10'^'-4', ~italic(z)=='61.970', ~italic(p)=='0.068')"
p1[["layers"]][[4]][["data"]][["label"]][[6]] <- "list(~widehat(italic(beta))=='5.996 \U00D7 10'^'-4', ~italic(z)=='32.990', ~italic(p)=='0.014')"
p1[["layers"]][[4]][["data"]][["label"]][[7]] <- "list(~widehat(italic(beta))=='4.073 \U00D7 10'^'-4', ~italic(z)=='14.360', ~italic(p)=='0.144')"
p1[["layers"]][[4]][["data"]][["label"]][[8]] <- "list(~widehat(italic(beta))=='-9.320 \U00D7 10'^'-4', ~italic(z)=='-20.702', ~italic(p)=='0.020')"
p1[["layers"]][[4]][["data"]][["label"]][[9]] <- "list(~widehat(italic(beta))=='7.920 \U00D7 10'^'-4', ~italic(z)=='27.023', ~italic(p)=='0.006')"
p1[["layers"]][[4]][["data"]][["label"]][[10]] <- "list(~widehat(italic(beta))=='-4.194 \U00D7 10'^'-4', ~italic(z)=='-60.500', ~italic(p)=='0.008')"
p1[["layers"]][[4]][["data"]][["label"]][[11]] <- "list(~widehat(italic(beta))=='2.863 \U00D7 10'^'-4', ~italic(z)=='20.657', ~italic(p)=='0.140')"
p1[["layers"]][[4]][["data"]][["label"]][[12]] <- "list(~widehat(italic(beta))=='4.436 \U00D7 10'^'-4', ~italic(z)=='64.615', ~italic(p)=='0.002')"
p1[["layers"]][[4]][["data"]][["label"]][[13]] <- "list(~widehat(italic(beta))=='-5.124 \U00D7 10'^'-4', ~italic(z)=='-59.365', ~italic(p)=='0.002')"
p1[["layers"]][[4]][["data"]][["label"]][[14]] <- "list(~widehat(italic(beta))=='1.693 \U00D7 10'^'-4', ~italic(z)=='6.716', ~italic(p)=='0.554')"
p1[["layers"]][[4]][["data"]][["label"]][[15]] <- "list(~widehat(italic(beta))=='-4.680 \U00D7 10'^'-4', ~italic(z)=='-37.743', ~italic(p)=='0.004')"
p2 <- ggplot2::autoplot(aa_fit) +
theme(legend.position="none",
text = element_text(size=16),
axis.text = element_text(size=10))
p2$layers[[1]]$data$variable <- factor(p2$layers[[1]]$data$variable,
levels= variables)
p2$layers[[2]]$data$variable <- factor(p2$layers[[2]]$data$variable,
levels= variables)
p2$data$variable <- factor(p2$data$variable,
levels= variables)
p2 <- p2 +
scale_fill_manual(values=rev(cols1))
pdf("../figs/fig5_mRMR_aareg.pdf", width = 14, height = 8)
cowplot::plot_grid(p1, p2, labels = "auto", nrow=1, rel_widths = c(0.7,1))
dev.off()
